name: CI/CD

on:
  push:
    branches:
      - develop
      - release
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set development environment
      if: endsWith(github.ref, 'develop')
      run: echo "ENVIRONMENT=development" >> $GITHUB_ENV
    - name: Set staging environment
      if: endsWith(github.ref, 'release')
      run: echo "ENVIRONMENT=staging" >> $GITHUB_ENV
    - name: Set production environment
      if: endsWith(github.ref, 'main')
      run: echo "ENVIRONMENT=production" >> $GITHUB_ENV

    - name: Retrieve Secrets
      run: |
        echo "${{ secrets.ENVIRONMENT_SECRET }}" > ${GITHUB_WORKSPACE}/secret-${{ env.ENVIRONMENT }}.env

    - name: Build Docker image
      run: |
        docker build -t express-starter:${{ env.ENVIRONMENT }} .
  
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Set development environment
      if: endsWith(github.ref, 'develop')
      run: echo "ENVIRONMENT=development" >> $GITHUB_ENV
    - name: Set staging environment
      if: endsWith(github.ref, 'release')
      run: echo "ENVIRONMENT=staging" >> $GITHUB_ENV
    - name: Set production environment
      if: endsWith(github.ref, 'main')
      run: echo "ENVIRONMENT=production" >> $GITHUB_ENV

    - name: Downcase REPOSITORY
        run: |
          echo "REPOSITORY=ghcr.io/${{ github.repository }}" >>${GITHUB_ENV}

    - name: Push to GitHub Container Registry
      run: |
        echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
        docker tag express-starter:${{ env.ENVIRONMENT }} ${REPOSITORY}:${{ env.ENVIRONMENT }}
        docker push ${REPOSITORY}:${{ env.ENVIRONMENT }}
