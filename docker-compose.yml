version: '3.8'
services:
  backend-production:
    image: "geoabbey/express-server:production"
    container_name: backend-production
    env_file:
     - .env-backend-production.txt
    labels:
      - traefik.enable=true
      - traefik.http.routers.backend-production.rule=Host(`api.ismail.com.ng`)
      - traefik.http.routers.backend-production.entrypoints=production
    restart: always
    networks:
      - production

  postgres-production:
    image: postgres:14-alpine
    container_name: postgres-production
    env_file:
     - .env-pg-production.txt
    volumes:
      - "/docker/data/postgres-production:/var/lib/postgresql/data"
    ports:
     - "5432:5432"
    restart: always
    networks:
      - production

  mongodb-production:
    image: mongo:6.0.2-focal
    container_name: mongodb-production
    env_file:
     - .env-mongo-production.txt
    volumes:
      - "/docker/data/mongodb-production:/data/db"
    restart: always
    ports:
     - "27017:27017"
    networks:
      - production

  traefik:
    image: traefik:v2.0
    restart: always
    container_name: traefik
    ports:
      - "80:80"
      - "8080:8080"
      - "443:443"
    command:
      - --api.insecure=false
      - --api.dashboard=true
      - --api.debug=true
      - --log.level=DEBUG
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.file.filename=/dynamic.yaml
      - --entrypoints.production.address=:80
 
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./dynamic.yaml:/dynamic.yaml
    networks:
      - production
    labels:
      - traefik.enable=true
      - traefik.http.routers.api.rule=Host(`monitor.ismail.com.ng`)
      - traefik.http.routers.api.service=api@internal

networks:
  production:
    name: production
    driver: bridge
    driver_opts:
      com.docker.network.enable_ipv6: "false"